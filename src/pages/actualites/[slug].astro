---
import { type CollectionEntry, getCollection } from 'astro:content';
import { Image } from 'astro:assets';

import Layout from '@layouts/Layout.astro';
import H1 from '@components/H1.astro';
import Section from '@components/Section.astro';
import Container from '@components/Container.astro';
import Prose from '@components/Prose.astro';
import ShareLinks from '@components/links/ShareLinks.astro';

interface Props {
	entry: CollectionEntry<'news'>;
}

export async function getStaticPaths() {
	const news = await getCollection('news');
	return news.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const dateOptions: Intl.DateTimeFormatOptions = {
	weekday: 'long',
	year: 'numeric',
	month: 'long',
	day: 'numeric',
};
const dateISOString = new Date(entry.data.date).toLocaleDateString('fr-FR', dateOptions);

const allNewsImages = await Astro.glob('../../content/news/*/*.{jpg,JPG,jpeg,png,PNG}');
const currentNewsImages = allNewsImages
	.map((img) => img.default)
	.filter((img) => img.src.includes(entry.slug) && !img.src.includes(entry.data.cover.src));
---

<Layout
	title={entry.data.title}
	description={entry.data.description}
	publishedDate={entry.data.date}
>
	<Container>
		<Section>
			<H1>{entry.data.title}</H1>
			<p class="mb-8 mt-4 text-2xl lg:mb-16">{entry.data.headline}</p>
			<Image
				src={entry.data.cover}
				alt={entry.data.title}
				class="h-[300px] object-cover lg:h-[600px]"
			/>
			<div class="flex flex-col gap-8 py-8 lg:flex-row lg:gap-16 lg:py-16">
				<aside class="flex justify-between gap-8 lg:w-1/4 lg:flex-col lg:justify-start">
					<time class="first-letter:uppercase">{dateISOString}</time>
					<ShareLinks title={entry.data.title} description={entry.data.description} />
				</aside>
				<Prose>
					<Content />
				</Prose>
			</div>
		</Section>

		{
			currentNewsImages.length > 0 ? (
				<Section>
					<div class="grid grid-cols-2 gap-8">
						{currentNewsImages.map((img) => (
							<Image src={img} alt="" />
						))}
					</div>
				</Section>
			) : null
		}
	</Container>
</Layout>
